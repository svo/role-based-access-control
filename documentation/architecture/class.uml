@startuml

class role {
  - id:int
  - name:string
  - child:[role]

  + get-id():int
  + get-name():string
  + get-child-role():[role]
  + add-child-role(role:role)
}

class user {
  - id:int
  - name:string
  - role:role

  + get-id():int
  + get-name():string
  + get-role():role
}

class user_repository {
  - record:[user]

  + insert(record:user)
  + get-by-id(id:int):user
  + get-by-role(role:[role]):[user]
}

class role_repository {
  - record:[role]

  + insert(record:role)
  + get-by-id(id:int):role
  + get-subordinate(role_id:int):[role]
}

class user_hierarchy {
  - role_repository:role_repository
  - user_repository:user_repository

  + set-role(role:[role])
  + set-user(user:[user])
  + get-subordinate(user_id:int):[user]
}

class role_json_marshaller {
  + from-json(role_json:string):[role]
  + to-json(role:[role]):string
}

class user_json_marshaller {
  + from-json(user_json:string):[user]
  + to-json(user:[user]):string
}

class facade {
  - user_hierarchy:user_hierarchy
  - role_json_marshaller:role_json_marshaller
  - user_json_marshaller:user_json_marshaller

  + create-roles(role_json:string)
  + create-users(user_json:string)
  + find-subordinate(user_id:int):string
}

role *-- role
user *-- role
user_hierarchy *-- role_repository
user_hierarchy *-- user_repository
user_repository o-- user
role_repository o-- role
facade *-- user_hierarchy
facade *-- role_json_marshaller
facade *-- user_json_marshaller
@enduml
